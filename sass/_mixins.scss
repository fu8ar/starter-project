// 
// Functions & Mixins
//

// Convert px to em
$base-font-size: 16px;
@function em($px, $base: $base-font-size) {
    @return ($px / $base) * 1em;
}

// Return font-family
@mixin fonts($font-types){
  font-family: $font-types, helvetica, arial, serif;
  font-weight: normal;
}

// Setup clearfix on an element
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table;}
  &:after { clear: both; }
}

// Setting all elements to box model
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

// Opacity mixin
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Setting absolute position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// Retina Images 
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3), 
          (-o-min-device-pixel-ratio: 2.6/2),
          (-webkit-min-device-pixel-ratio: 1.3),
          (min-device-pixel-ratio: 1.3),
          (min-resolution: 1.3dppx) {
          /* on retina, use image that's scaled by 2 */
          background-image: url($image);
          background-size: $width $height;
    }
}

// Usage of mixin example

  // div.logo {
 //       background: url("logo.png") no-repeat;
 //       @include image-2x("logo2x.png", 100px, 25px);
 //   }


// Set media query
@mixin breakpoint($point) {
  @if $point == mobile {
    @media (min-width: 768px) { @content; }
  }
  @if $point == tablet {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == website {
    @media (min-width: 992px) { @content; }
  }
  @else if $point == large {
    @media (min-width: 1200px)  { @content; }
  }
  @else if $point == exlarge {
    @media (min-width: 1440px)  { @content; }
  }
}




