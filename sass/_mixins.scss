// 
// Functions & Mixins
//

// Setting all elements to box model
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

// Calcualte REM with a px fallback
@mixin rem2px($sizeValue: 1.6) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

// Return font-family
@mixin fonts($font-types){
  font-family: $font-types, helvetica, arial, serif;
  font-weight: normal;
}

// Responsive font sizing
@mixin font-sizing($mobile_size, $tablet_size, $desktop_size, $large_size: inherit){
  @include rem2px($mobile_size);
  @include breakpoint(tablet){
    @include rem2px($tablet_size);
  }
  @include breakpoint(large){
    @include rem2px($desktop_size);
  }
  @include breakpoint(exlarge){
    @include rem2px($large_size);
  }
}

// Setup clearfix on an element
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table;}
  &:after { clear: both; }
}


// Setting absolute position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// placeholder
@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}

// Standard Padding & background color
@mixin standard-padding($section_color) {
  background-color: $section_color;
  width: 100%;
  padding: 40px 0;
  @include breakpoint(tablet){
    padding: 60px 0;
  }
  @include breakpoint(website){
    padding: 120px 0;
  }
}

// Retina Images 
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3), 
          (-o-min-device-pixel-ratio: 2.6/2),
          (-webkit-min-device-pixel-ratio: 1.3),
          (min-device-pixel-ratio: 1.3),
          (min-resolution: 1.3dppx) {
          /* on retina, use image that's scaled by 2 */
          background-image: url($image);
          background-size: $width $height;
    }
}

// Usage of mixin example

  // div.logo {
 //       background: url("logo.png") no-repeat;
 //       @include image-2x("logo2x.png", 100px, 25px);
 //   }


// Set media query
@mixin breakpoint($point) {
  @if $point == mobile {
    @media (min-width: 500px) { @content; }
  }
  @if $point == tablet {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == website {
    @media (min-width: 992px) { @content; }
  }
  @else if $point == large {
    @media (min-width: 1200px)  { @content; }
  }
  @else if $point == exlarge {
    @media (min-width: 1440px)  { @content; }
  }
}

// Mobile size        - 0 and 479px
// Mobile landscape size    - 480 and 767px   - @include breakpoint(mobile)  {}
// Tablet size        - 768px and 991px   - @include breakpoint(tablet)  {}
// Website size       - 992px and 1199px  - @include breakpoint(website) {}
// Large size         - 1220px and 1439   - @include breakpoint(large)   {}
// ExLarge size       - 1440px and above  - @include breakpoint(exlarge) {}

@mixin breakpointheight($value) {
  @media (max-height: $value) { 
    @content; 
  }
}


